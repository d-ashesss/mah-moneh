// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	categories "github.com/d-ashesss/mah-moneh/internal/categories"
	mock "github.com/stretchr/testify/mock"

	transactions "github.com/d-ashesss/mah-moneh/internal/transactions"
)

// Spendings is an autogenerated mock type for the Spendings type
type Spendings struct {
	mock.Mock
}

// AddAmount provides a mock function with given fields: cat, currency, amount
func (_m *Spendings) AddAmount(cat *categories.Category, currency string, amount float64) {
	_m.Called(cat, currency, amount)
}

// AddTransaction provides a mock function with given fields: tx
func (_m *Spendings) AddTransaction(tx *transactions.Transaction) {
	_m.Called(tx)
}

// GetAmount provides a mock function with given fields: cat, currency
func (_m *Spendings) GetAmount(cat *categories.Category, currency string) float64 {
	ret := _m.Called(cat, currency)

	var r0 float64
	if rf, ok := ret.Get(0).(func(*categories.Category, string) float64); ok {
		r0 = rf(cat, currency)
	} else {
		r0 = ret.Get(0).(float64)
	}

	return r0
}

type mockConstructorTestingTNewSpendings interface {
	mock.TestingT
	Cleanup(func())
}

// NewSpendings creates a new instance of Spendings. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSpendings(t mockConstructorTestingTNewSpendings) *Spendings {
	mock := &Spendings{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
