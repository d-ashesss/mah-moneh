// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	transactions "github.com/d-ashesss/mah-moneh/internal/transactions"

	users "github.com/d-ashesss/mah-moneh/internal/users"
)

// TransactionsService is an autogenerated mock type for the TransactionsService type
type TransactionsService struct {
	mock.Mock
}

// GetUserTransactions provides a mock function with given fields: ctx, u, month
func (_m *TransactionsService) GetUserTransactions(ctx context.Context, u *users.User, month string) (transactions.TransactionCollection, error) {
	ret := _m.Called(ctx, u, month)

	var r0 transactions.TransactionCollection
	if rf, ok := ret.Get(0).(func(context.Context, *users.User, string) transactions.TransactionCollection); ok {
		r0 = rf(ctx, u, month)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(transactions.TransactionCollection)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *users.User, string) error); ok {
		r1 = rf(ctx, u, month)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewTransactionsService interface {
	mock.TestingT
	Cleanup(func())
}

// NewTransactionsService creates a new instance of TransactionsService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewTransactionsService(t mockConstructorTestingTNewTransactionsService) *TransactionsService {
	mock := &TransactionsService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
