// Code generated by mockery v2.28.1. DO NOT EDIT.

package mocks

import (
	context "context"

	users "github.com/d-ashesss/mah-moneh/internal/users"
	mock "github.com/stretchr/testify/mock"
)

// UsersService is an autogenerated mock type for the UsersService type
type UsersService struct {
	mock.Mock
}

// GetUser provides a mock function with given fields: ctx, ID
func (_m *UsersService) GetUser(ctx context.Context, ID string) (*users.User, error) {
	ret := _m.Called(ctx, ID)

	var r0 *users.User
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) (*users.User, error)); ok {
		return rf(ctx, ID)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) *users.User); ok {
		r0 = rf(ctx, ID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*users.User)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, ID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewUsersService interface {
	mock.TestingT
	Cleanup(func())
}

// NewUsersService creates a new instance of UsersService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewUsersService(t mockConstructorTestingTNewUsersService) *UsersService {
	mock := &UsersService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
