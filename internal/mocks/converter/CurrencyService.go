// Code generated by mockery v2.33.2. DO NOT EDIT.

package mocks

import (
	accounts "github.com/d-ashesss/mah-moneh/internal/accounts"

	mock "github.com/stretchr/testify/mock"
)

// CurrencyService is an autogenerated mock type for the CurrencyService type
type CurrencyService struct {
	mock.Mock
}

// GetRate provides a mock function with given fields: base, target, month
func (_m *CurrencyService) GetRate(base accounts.Currency, target accounts.Currency, month string) float64 {
	ret := _m.Called(base, target, month)

	var r0 float64
	if rf, ok := ret.Get(0).(func(accounts.Currency, accounts.Currency, string) float64); ok {
		r0 = rf(base, target, month)
	} else {
		r0 = ret.Get(0).(float64)
	}

	return r0
}

// NewCurrencyService creates a new instance of CurrencyService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCurrencyService(t interface {
	mock.TestingT
	Cleanup(func())
}) *CurrencyService {
	mock := &CurrencyService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
