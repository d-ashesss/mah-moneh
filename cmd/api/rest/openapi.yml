openapi: "3.1.0"
info:
  title: "Mah-Moneh"
  summary: "Personal finance management API"
  version: 0.5.0
  license:
    name: "MIT"
    url: "https://opensource.org/license/mit/"
servers:
  - url: "http://localhost:60000"
    description: "Development Server"
paths:
  "/accounts":
    get:
      summary: List existing accounts
      tags:
        - account
      responses:
        "200":
          description: The list of existing accounts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
      security:
        - bearerAuth: []
    post:
      summary: Create new account
      tags:
        - account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        "201":
          description: Account was successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
  "/accounts/{uuid}":
    put:
      summary: Update existing account
      tags:
        - account
      parameters:
        - name: uuid
          in: path
          description: UUID of the account
          required: true
          schema:
            type: string
            format: UUID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        "200":
          description: Account was successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        "404":
          description: Account was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
    delete:
      summary: Delete existing account
      tags:
        - account
      parameters:
        - name: uuid
          in: path
          description: UUID of the account
          required: true
          schema:
            type: string
            format: UUID
      responses:
        "200":
          description: Account was successfully deleted
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "404":
          description: Account was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []

  "/accounts/{uuid}/amounts/{month}":
    get:
      summary: Get account amounts per currency for a specific month
      tags:
        - account
      parameters:
        - name: uuid
          in: path
          description: UUID of the account
          required: true
          schema:
            type: string
            format: UUID
        - name: month
          in: path
          description: Month of the year in format `YYYY-MM`
          required: true
          schema:
            type: string
            format: 'YYYY-MM'
      responses:
        "200":
          description: A hash map of account amounts per currency
          content:
            application/json:
              schema:
                type: object
                properties:
                  USD:
                    type: number
                    format: float
                examples:
                  - USD: 50
                    EUR: 93.75
        "404":
          description: Account was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
    put:
      summary: Set account amounts per currency for a specific month
      tags:
        - account
      parameters:
        - name: uuid
          in: path
          description: UUID of the account
          required: true
          schema:
            type: string
            format: UUID
        - name: month
          in: path
          description: Month of the year in format `YYYY-MM`
          required: true
          schema:
            type: string
            format: 'YYYY-MM'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountAmount'
      responses:
        "200":
          description: Account amount was successfully updated
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "404":
          description: Account was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []

  "/categories":
    get:
      summary: List existing categories
      tags:
        - category
      responses:
        "200":
          description: List of existing categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
      security:
        - bearerAuth: []
    post:
      summary: Create a new category
      tags:
        - category
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        "201":
          description: Category was successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
  "/categories/{uuid}":
    delete:
      summary: Delete a category
      tags:
        - category
      parameters:
        - name: uuid
          in: path
          description: UUID of the category
          required: true
          schema:
            type: string
            format: UUID
      responses:
        "200":
          description: Category was successfully deleted
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "404":
          description: Category was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []

  "/transactions":
    post:
      summary: Create new transaction
      tags:
        - transaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
      responses:
        "201":
          description: Transaction was successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
  "/transactions/{month}":
    get:
      summary: Get all transactions for specific month
      tags:
        - transaction
      responses:
        "200":
          description: List of transactions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
      security:
        - bearerAuth: []
  "/transactions/{uuid}":
    delete:
      summary: Delete a transaction
      tags:
        - transaction
      parameters:
        - name: uuid
          in: path
          description: UUID of the transaction
          required: true
          schema:
            type: string
            format: UUID
      responses:
        "200":
          description: Transaction was successfully deleted
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "404":
          description: Transaction was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []

  "/spendings/{month}":
    get:
      summary: Get spendings per category per currency for a specific month
      description: |
        The response will contain a hash map of category UUIDs with amounts spent in this category for each currency.
        
        Special categories are:
        * `uncategorized` - sum of all transactions without a category.
        * `unaccounted` - difference between changes on all accounts and sum of all transactions
        (basically it contains all spendings that were not entered as transactions).
      tags:
        - spendings
      parameters:
        - name: month
          in: path
          description: Month of the year in format `YYYY-MM`
          required: true
          schema:
            type: string
            format: "YYYY-MM"
      responses:
        "200":
          description: Spendings for the month
          content:
            application/json:
              schema:
                type: object
                properties:
                  uncategorized:
                    type: object
                    properties:
                      USD:
                        type: number
                        format: float
                  unaccounted:
                    type: object
                    properties:
                      USD:
                        type: number
                        format: float
                examples:
                  - uncategorized:
                      USD: 105.5
                    unaccounted:
                      USD: 0
                    "49695d12-2fb9-499f-9631-e6a5aca9ba98":
                      USD: 22.75
      security:
        - bearerAuth: []

components:
  schemas:
    Account:
      type: object
      properties:
        uuid:
          type: string
          format: UUID
          examples:
            - "2cded539-3404-497b-b236-81a58048f015"
        name:
          type: string
          examples:
            - "cash"
    AccountAmount:
      type: object
      properties:
        currency:
          type: string
          format: currency code
          examples:
            - "USD"
        amount:
          type: number
          format: float
          examples:
            - 54.95
    Category:
      type: object
      properties:
        uuid:
          type: string
          format: UUID
          examples:
            - "49695d12-2fb9-499f-9631-e6a5aca9ba98"
        name:
          type: string
          examples:
            - "groceries"
    Transaction:
      type: object
      properties:
        uuid:
          type: string
          format: UUID
          examples:
            - "5054a67e-63fc-4d45-856d-dd9228e40add"
        month:
          type: string
          format: 'YYYY-MM'
          examples:
            - "2020-01"
        currency:
          type: string
          format: currency code
          examples:
            - "USD"
        amount:
          type: number
          format: float
          examples:
            - -45.95
        description:
          type: string
          examples:
            - "new guitar"
        category_uuid:
          type: string
          format: UUID
          examples:
            - "49695d12-2fb9-499f-9631-e6a5aca9ba98"
    Error:
      type: object
      properties:
        error:
          type: string
          examples:
            - "Invalid request input"
            - "Not found"
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
